name: Upload to PyPI

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - "src/cofi/_version.py"

jobs:
  ######################## SOURCE DIST ##################################
  build_sdist:
    if: github.repository_owner == 'inlab-geo'
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build and check sdist
        run: |
          $CONDA/bin/python setup.py sdist

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  ######################## UPLOAD TO PYPI ###############################
  publish_pypi:
    name: Upload source distribution and wheels to PyPI
    needs: build_sdist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Extract Release Version
        id: release_version
        working-directory: src/cofi
        run: |
          set -e
          python -c "import _version as v; print(v.__version__)"
          echo ::set-output name=version::$(python -c "import _version as v; print(v.__version__)")

      - name: Create release tag
        uses: rickstaa/action-create-tag@v1.3.0
        with:
          tag: "v${{ steps.release_version.outputs.version }}"
          force_push_tag: true

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
